import React, { useEffect, useRef } from 'react';

import { createStyles, Theme, makeStyles } from '@material-ui/core/styles';
import Typography from '@material-ui/core/Typography';
import Grid from '@material-ui/core/Grid';
import Paper from '@material-ui/core/Paper';
import List from '@material-ui/core/List';
import ListItem from '@material-ui/core/ListItem';
import ListItemAvatar from '@material-ui/core/ListItemAvatar';
import ListItemText from '@material-ui/core/ListItemText';
import ListSubheader from '@material-ui/core/ListSubheader';
import Avatar from '@material-ui/core/Avatar';

const messages = [
  {
    id: 1,
    primary: '中文昵称',
    secondary:
      '日本人的习惯是倍数和数字都是放在后面的，跟我们的语序习惯不一样，所以放前面的话日本人看起来会觉得奇怪',
    person: '/static/images/avatar/5.jpg',
  },
  {
    id: 2,
    primary: '中文昵称',
    secondary: `简单文本`,
    person: '/static/images/avatar/1.jpg',
  },
  {
    id: 3,
    primary: '接收的消息',
    secondary: '来自其他人的消息',
    person: '/static/images/avatar/2.jpg',
  },
  {
    id: 4,
    primary: 'Yes!',
    secondary: 'I have the tickets to the ReactConf for this year.',
    person: '/static/images/avatar/3.jpg',
  },
  {
    id: 5,
    primary: "Doctor's Appointment",
    secondary:
      'My appointment for the doctor was rescheduled for next Saturday.',
    person: '/static/images/avatar/4.jpg',
  },
  {
    id: 6,
    primary: 'Discussion',
    secondary: `Menus that are generated by the bottom app bar (such as a bottom
      navigation drawer or overflow menu) open as bottom sheets at a higher elevation
      than the bar.`,
    person: '/static/images/avatar/5.jpg',
  },
  {
    id: 7,
    primary: 'Summer BBQ',
    secondary: `Who wants to have a cookout this weekend? I just got some furniture
      for my backyard and would love to fire up the grill.`,
    person: '/static/images/avatar/1.jpg',
  },
];

const useStyles = makeStyles((theme: Theme) =>
  createStyles({
    text: {
      padding: theme.spacing(2, 2, 0),
    },
    paper: {
      // paddingBottom: 50,
      maxHeight: '100%',
      overflow: 'auto',
    },
    messagePaper: {
      padding: 7,
      maxWidth: '70vw',
      borderRadius: 10,
      // 如果是收到的消息就是 borderTopLeftRadius
      borderTopRightRadius: 0,
    },
    listItemAvatar: {
      marginBottom: 0,
      padding: 8,
      minWidth: 0,
    },
    list: {
      marginBottom: theme.spacing(2),
    },
    subheader: {
      backgroundColor: theme.palette.background.paper,
    },
    appBar: {
      top: 'auto',
      bottom: 0,
    },
    grow: {
      flexGrow: 1,
    },
    fabButton: {
      position: 'absolute',
      zIndex: 1,
      top: -30,
      left: 0,
      right: 0,
      margin: '0 auto',
    },
    inline: {
      display: 'inline',
      padding: 2,
    },
  })
);

const MessageList = () => {
  const classes = useStyles();
  const refOfPaper = useRef<Element>();
  // 如果有问题 修改 userEffect 为 useLayoutEffect
  useEffect(() => {
    if (refOfPaper.current !== undefined) {
      refOfPaper.current.scrollTop = refOfPaper.current?.scrollHeight;
    }
  });

  return (
    <Paper square className={classes.paper} ref={refOfPaper}>
      <Typography className={classes.text} variant="h5" gutterBottom>
        收件箱
      </Typography>
      <List className={classes.list}>
        {messages.map(({ id, primary, secondary, person }) => (
          <React.Fragment key={id}>
            {id === 1 && (
              <ListSubheader className={classes.subheader}>Today</ListSubheader>
            )}
            {id === 3 && (
              <ListSubheader className={classes.subheader}>
                Yesterday
              </ListSubheader>
            )}
            <ListItem alignItems="flex-start">
              <ListItemAvatar className={classes.listItemAvatar}>
                <Avatar alt="Profile Picture" src={person} />
              </ListItemAvatar>
              {/* justify="flex-end" 如果是收到的消息就不设置这个 */}
              <Grid container justify="flex-end">
                <Grid item xs={12}>
                  <ListItemText
                    primary={
                      <Grid container alignItems="center" justify="flex-end">
                        {/* justify="flex-end" */}
                        <Typography
                          variant="subtitle1"
                          gutterBottom
                          className={classes.inline}
                        >
                          {primary}
                        </Typography>
                        <Typography
                          variant="body2"
                          gutterBottom
                          className={classes.inline}
                        >
                          {new Date().toLocaleTimeString()}
                        </Typography>
                      </Grid>
                    }
                  />
                </Grid>
                <Paper elevation={4} className={classes.messagePaper}>
                  <ListItemText primary={secondary} />
                </Paper>
              </Grid>
              <ListItemAvatar className={classes.listItemAvatar}>
                <Avatar alt="Profile Picture" src={person} />
              </ListItemAvatar>
            </ListItem>
          </React.Fragment>
        ))}
      </List>
    </Paper>
  );
};

export default MessageList;
